-------------------------------------------------------------
GIT CHERRY PICK
-------------------------------------------------------------
Este comando sirve para seleccionar un commit en especifico, y aplicar un parche en el.
Este comando aplica los cambios establecidos en un commit (o mas) establecido. Y al hacer esto, va a crear un commit nuevo.

El cherry pick es el acto de seleccionar un commit de una rama, y moverlo a otra rama.
Cons: puede causar commits duplicados.

Uso del comando:
- git cherry-pick <commitHashAAplicar>

Ejemplo:
1. Crear Rama
2. Commit 1: Line 1
3. Commit 2: Line 2
4. Commit 3: Line 1 modified

5. Moverse a master branch
6. git cherry-pick <commitHashCommit1> = Aqui se agregan "Line 1" introducido por el commit 1 en master.
7. git cherry-pick <commitHashCommit3> = Aqui se agrega "Line 1 modified" introducidas por el commit 3, pero tambien se agrega "Line 2" introducido por el commit 2, porque el commit 3 ya contenia el commit 2.   

-------------------------------------------------------------
GIT REBASE
-------------------------------------------------------------
Este comando significa cambiar la base de un commit.

           -   C.1   -   c2.2

A   -   B  -   D     -   E		

Siguiendo el ejemplo anterior, la base de la rama C es B. Con el rebase lo que vamos a hacer es cambiarle la base de la rama para que sea E.
Output: 
   

A   -   B  -   D     -   E   -   C.1   -   c2.2

Uso del comando:
Estando parado en la rama a rebasear, hacemos: git rebase master

